CPS 3 - Grands chantiers v1.0

  NOTE

    Ce document doit être mergé avec le draft de julien, et mis à jour.

  Base documentaire

    Document Repository

      C'est là que seront stockés "physiquement" la plupart des
      documents (en tout cas au moins ceux qui sont sujet au workflow ou
      au versionning). Ces documents ne sont jamais accédés directement.

    Proxies

      C'est à travers un proxy (qui référence quel est le document
      physique, et éventuellement quelle version ou quelle langue) qu'on
      accède à un document. C'est le proxy qui suit un workflow.

  Object Hub

    Stocke les relations entre objets. C'est peut-être simplement le
    Catalog, à voir. Types de relations stockées:

      - est un proxy pour

      - est un sous-document de

  Staging

    Use cases

      DICOD

        À un moment donné, basculer l'ensemble des documents publiés
        vers un autre serveur (et évidemment supprimer les documents qui
        ont été supprimés). Attention, certaines choses comme les
        commentaires des internautes, ou les messages dans les forums,
        ne doivent pas être écrasés.

        Il faut également basculer toute l'ossature (répertoires).

  Workflow Tool

    Gère tous les workflows possibles, de manière unifiée. Notamment:

      - publication (le processus peut dépendre de l'endroit)

      - étapes de travail

      - traduction

      - ...

    Besoins divers

      Interactions entre deux workflows. Ex:

        - Un ordre de mission ne doit pouvoir se déplacer dans le
          workflow "publication" que s'il est dans l'état "fini" du
          workflow de création.

        - Un document dans le workflow "édition" ne doit pas pouvoir se
          déplacer dans le workflow "publication".

      Gestion au niveau du workflow de la plupart des actions dans le site

        - Commenter un document

        - Modifier un document

        - Créer/détruire un document

        - ...

  Documents composites

    Use cases

      Dossier

        Un dossier regroupe plusieurs autres documents. Lorsqu'il est
        affiché, il propose des liens vers les sous-documents,
        éventuellement leur résumé, etc.

        C'est un peu comme un répertoire sauf qu'il a une unité
        particulière vis à vis du workflow: lorsque le dossier est
        soumis/publié, tous les documents à l'intérieur sont
        soumis/publiés. (Bien définir la politique de
        création/suppression de sous-documents lorsque le dossier est
        publié.)

      Document structuré

        Un document composé d'un paragraphe de description, d'une image,
        d'un chapeau, d'un corps. L'image et le corps sont en fait des
        sous-documents.

  Versionning

    ...

  Traduction

    ...

  Notification Center

    Reçoit et traite les notifications envoyées par divers
    sous-systèmes, par exemple des changements d'état dans le workflow,
    des créations, suppressions, déplacements.

    Abonnements d'autres sous-systèmes

      - Workflow (s'abonne aux événements temporels, pour expiration)

    Notifications externes

      - Envoi de mail

      - Queue de mails pour envoi groupé régulier

  Elements

    ...

  Portlets

    ...

  Flexible Metadata

    Possibilité de rajouter globalement (ou à certains types seulement)
    des métadonnées à des objets.

    Exemples

      - On décide que tous les documents doivent en plus avoir une
        indication de "source".

  Génération de formulaire

    Use cases

      Création de types par un développeur

        On veut pouvoir créer un nouveau type de document contenant
        certains champs choisir leur layout, avec stockage dans des
        propriétés.

        Exemples

          - FAQ (simple)

          - Fiche de renseignement avec layout complexe

          - Ordre de mission, dont les champs affichés ou modifiables
            dépendent de l'état dans le workflow, du contenu d'autres
            champs, de l'identité de l'utilisateur...

      Création de types par un administrateur

        Un administrateur décide de créer un nouveau type de fiche dans
        son site (ex: fiche de renseignement). Choix du layout,
        stockage.

        C'est un cas simplifié (champs fixes) de la création par un
        développeur.

        Sondages: le formulaire n'a qu'une seule instance, est en mode
        "édition" (en fait création) pour tout utilisateur, et stocke
        ses résultats en interne ou dans une base SQL. Voir comment on
        gère ça.

  Documents standards

    - NuxDocument

    - Texte simple

      - News

    - Image

    - Forum

    - Mailing-list ?

    - Habillages rubriques

    - Dossier (document composite)

    - Wiki

  Organisation générale du projet

    Fichiers standards

      - COPYING.txt

      - LICENSE.txt

      - COPYRIGHT.txt

      - README.txt

    Conventions de nommage

      ...

    Code python

      Securité

        Toutes les méthodes ne commençant pas par un underscore doivent
        avoir une déclaration security.declarePublic/Private/Protected.
        Elle doit être écrite sur une seule ligne, juste avant la
        définition de fonction correspondante, ceci afin de pouvoir
        automatiser la vérification.

      Interfaces

        Pas obligatoires pour l'instant.

      Docstrings

        Il doit être possible de produire une documentation complète
        d'un module en passant pydoc dessus. Ceci implique de suivre les
        règles suivantes.

        Toutes les méthodes python faisant partie d'un API doivent avoir
        une docstring ayant un résumé en une ligne, et si nécessaire,
        après une ligne blanche, une description détaillée des
        conditions d'entrée et de sortie (Ce format est celui utilisé
        par Zope 3.) Exemple ::

          def foo(bar, baz, default=None):
              """Fait un foo avec double salto.

              Si bar ou baz ne sait pas faire de salto,
              retourne la valeur default.
              """

        Toutes les autres méthodes "utilitaires" doivent avoir un nom
        commençant par un underscore, afin de pouvoir être écartées lors
        de la génération automatique de doc. Une docstring est
        optionnelle, mais si elle n'est pas présente elle doit être
        remplacée par un commentaire décrivant la fonction.

    Tests unitaires

      À utiliser absolument. C'est la *première* infrastructure de code
      à mettre en place pour chacun des modules du projet. Si on part de
      code existant, la première chose à faire est d'écrire des tests
      unitaires pour l'existant.

    Support Unicode

      Les caractères non-ASCII doivent être absents des page templates,
      sinon ils impliqueraient un encodage spécifique qu'on n'a pas les
      moyens de spécifier.
